// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/trustbloc/edge-service/pkg/client/comparator/models"
)

// PostExtractReader is a Reader for the PostExtract structure.
type PostExtractReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostExtractReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostExtractOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewPostExtractInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostExtractOK creates a PostExtractOK with default headers values
func NewPostExtractOK() *PostExtractOK {
	return &PostExtractOK{}
}

/* PostExtractOK describes a response with status code 200, with default header values.

list of extracted documents
*/
type PostExtractOK struct {
	Payload *PostExtractOKBody
}

func (o *PostExtractOK) Error() string {
	return fmt.Sprintf("[POST /extract][%d] postExtractOK  %+v", 200, o.Payload)
}
func (o *PostExtractOK) GetPayload() *PostExtractOKBody {
	return o.Payload
}

func (o *PostExtractOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostExtractOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExtractInternalServerError creates a PostExtractInternalServerError with default headers values
func NewPostExtractInternalServerError() *PostExtractInternalServerError {
	return &PostExtractInternalServerError{}
}

/* PostExtractInternalServerError describes a response with status code 500, with default header values.

Generic Error
*/
type PostExtractInternalServerError struct {
	Payload *models.Error
}

func (o *PostExtractInternalServerError) Error() string {
	return fmt.Sprintf("[POST /extract][%d] postExtractInternalServerError  %+v", 500, o.Payload)
}
func (o *PostExtractInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostExtractInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostExtractBody post extract body
swagger:model PostExtractBody
*/
type PostExtractBody struct {

	// list of authorization tokens used to extract documents
	// Example: ["authToken1","authToken2","authToken3"]
	AuthTokens []string `json:"authTokens"`
}

// Validate validates this post extract body
func (o *PostExtractBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post extract body based on context it is used
func (o *PostExtractBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostExtractBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostExtractBody) UnmarshalBinary(b []byte) error {
	var res PostExtractBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostExtractOKBody post extract o k body
swagger:model PostExtractOKBody
*/
type PostExtractOKBody struct {

	// documents
	Documents []interface{} `json:"documents"`
}

// Validate validates this post extract o k body
func (o *PostExtractOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post extract o k body based on context it is used
func (o *PostExtractOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostExtractOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostExtractOKBody) UnmarshalBinary(b []byte) error {
	var res PostExtractOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
